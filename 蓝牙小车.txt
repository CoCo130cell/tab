#include "delay.h"
#include "sys.h"
#include "pwm.h"
#include "usart.h"	
#include "stm32f10x_gpio.h"
#include "stm32f10x_rcc.h"
#include "LED.H"
void Stop(void);
int main(void)
 {
	SystemInit();
     
	 delay_init(72);//延时初始化
	uart_init(9600);//波特率9600
	 LED_Init();
   Key_Init();
	PWM_Init2(999,719);	 //左、右电机pwm

	Stop();  //防止一上电，小车就开始跑
	uint8_t a=0;
	   while(1)
		 {
			if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_11)==0)
			{
			 
		 delay_ms(20);
		 while(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_11)==0);
		 delay_ms(20);
		 a++;
		 }
			 if (a == 1)
		{
           B_Music();
		}
		if (a == 2)
		{
           a=0;
		}
	 }
 }
 
//******************STOP********************	 
	 
void Stop(void)//让小车停下的函数
{
				TIM_SetCompare1(TIM3,0);
				TIM_SetCompare2(TIM3,0);
					 
				TIM_SetCompare3(TIM3,0);
				TIM_SetCompare4(TIM3,0);
}
2.蓝牙通信.c函数
#include "sys.h"
#include "usart.h"	  
#include "delay.h"

void uart_init(u32 bound){
  //GPIO端口设置
  GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1|RCC_APB2Periph_GPIOA, ENABLE);	//使能USART1¬GPIOA时钟
	//USART1_TX   GPIOA.9
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; //PA.9
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;	//复用推挽输出
  GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.9
   
  //USART1_RX	  GPIOA.10初始化
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//PA10
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//浮空输入
  GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.10 

  //Usart1 NVIC 配置
  NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3 ;//抢占优先级3
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;	//子优先级3
NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			//IRQ通道使能
	NVIC_Init(&NVIC_InitStructure);	//根据指定的参数初始化vic寄存器
  
   //USART 初始化设置

	USART_InitStructure.USART_BaudRate = bound;//串口波特率
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为8位数据格式
	USART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位
	USART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶检验位
	USART_InitStructure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;//无硬件数据流控制
	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;	//收发模式

  USART_Init(USART1, &USART_InitStructure); //初始化串口1
  USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//开启串口接受中断
  USART_Cmd(USART1, ENABLE);                    //使能串口1 

}

void USART1_IRQHandler(void)
{
	u8 res;
	if(USART_GetITStatus(USART1,USART_IT_RXNE)!= RESET)
	{
		res=USART_ReceiveData(USART1);
		USART_SendData(USART1,res);
		switch(res)
		{
			case 0x0a://小车前进
				  GPIO_SetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
			     delay_ms(200);
			GPIO_ResetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
			     
				TIM_SetCompare3(TIM3,600);  //PB0   左电机
				TIM_SetCompare4(TIM3,0);  //PB1      
					
				TIM_SetCompare1(TIM3,600);  //PA6  右电机
				TIM_SetCompare2(TIM3,0);  //PA7       
					
				delay_ms(200);Stop();
			
				break;
			case 0x0b://小车后退
				 GPIO_SetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
			delay_ms(200);
			GPIO_ResetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
					TIM_SetCompare3(TIM3,0);  //PB0   左前
				TIM_SetCompare4(TIM3,600);  //PB1       左后
					
				TIM_SetCompare1(TIM3,0);  //PA6   右前
				TIM_SetCompare2(TIM3,600);  //PA7      右后									
				delay_ms(200);Stop();
			
				break;
			case 0x0c://小车右转
				 GPIO_SetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
			delay_ms(200);
			GPIO_ResetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
				TIM_SetCompare3(TIM3,600);  //PB0   左电机前进
				TIM_SetCompare4(TIM3,0);  //PB1      			
				TIM_SetCompare1(TIM3,0);  //PA6   右电机前进
				TIM_SetCompare2(TIM3,600);  //PA7       
				delay_ms(100);Stop();		
				break;
			case 0x0d://小车左转
				 GPIO_SetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
			delay_ms(200);
			GPIO_ResetBits(GPIOA,GPIO_Pin_2);//set亮，reset暗
				TIM_SetCompare3(TIM3,0);  //PB0   左前
				TIM_SetCompare4(TIM3,600);  //PB1       左后
					
				TIM_SetCompare1(TIM3,600);  //PA6   右前
				TIM_SetCompare2(TIM3,0);  //PA7       右后			
			delay_ms(100);Stop();	
				break;
			case 0x0e://开启车灯
				GPIO_ResetBits(GPIOA,GPIO_Pin_3);//set亮，reset暗
	GPIO_ResetBits(GPIOA,GPIO_Pin_4);//set亮，reset暗
				break;
			case 0x0f://关闭车灯
				GPIO_SetBits(GPIOA,GPIO_Pin_3);//set亮，reset暗
			GPIO_SetBits(GPIOA,GPIO_Pin_4);//set亮，reset暗
				break;		
		}
	}
}